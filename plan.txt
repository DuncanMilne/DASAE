CLIENT  // X indicates I have added it to the interface
- Create auction items X
  - [name, min item value, close time, id]
  - for auction close times we could ask the user to enter a date and a time in format DD/MM/YYYY and HH/MM/SS and then convert to seconds (handout says it needs to be specified in seconds)
- Bid against auction items X
- View available auction items X
- Query 'finished' auctions X
- Be notified of the auction result
  - Via a callback
  - Provide info about bid/auction status
- 'Heartbeat' check that server is still responsive X

SERVER
- Maintain a list of currently active auctions X
- Maintain the state of each auction
  - Server is responsible for identifying and processing 'finished' auctions:
    * Callback to bidders
    * Remove it from list of active auctions
    * 'Store' the finished auction's data somehow
- Individual handler threads for each connected client (???)
- Retain finished auction info for querying
- Save/restore state from permanent memory
  - Can be used to 'bootstrap' or initialise the server for testing
- Failure detection
  - Some kind of 'heartbeat' mechanism?
  - Could have the heartbeat give some info about server load?


store linked list of waiting clients for auction to finish maybe sort by soonest finishing first then just wait on the first ones
or for each auction give them a linked list off people listening and each auction has a thread that waits until it finishes
